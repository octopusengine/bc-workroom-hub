#!/bin/sh
# vim: set ts=4:
#
# Builds debian packages.
#
# Environment variables:
# 	PKG_VERSION : Version of the resulting packages. If not specified, then
# 	              it's determined from git base on tags.
# 	BUILD_DIR   : Directory for temporary build files (defaults to ./build).
# 	TARGET_DIR  : Directory where to put built .deb packages.
set -eu

cd "$(dirname "$0")/.."
. script/utils.sh


PKG_MAINTAINER='BigClown Labs <support@bigclown.com>'
PKG_HOMEPAGE='https://github.com/bigclownlabs/bc-workroom-hub'
PKG_LICENSE='MIT'

LIB_DIR='/usr/lib/bigclown'
BLYNK_DEST_DIR="$LIB_DIR/bc-workroom-blynk"

if [ -z "${PKG_VERSION:-}" ]; then
	# If git HEAD is tagged as v*, then it returns name of the tag.
	git_version="$(git describe --tags --exact-match --match 'v*')" || {
		die '$PKG_VERSION is not set and could not determine version from git!'
	}
	PKG_VERSION="${git_version:1}"  # strip first char
fi


_fpm() {
	# Unquote arguments that we have quoted in order to preserve whitespaces
	# (used in --depends).
	eval "set -- $@"

	fpm --input-type dir \
		--output-type deb \
		--package "$TARGET_DIR" \
		--maintainer "$PKG_MAINTAINER" \
		--vendor "$PKG_MAINTAINER" \
		--url "$PKG_HOMEPAGE" \
		--license "$PKG_LICENSE" \
		--version "$PKG_VERSION" \
		--architecture all \
		"$@"
}

# Parses debian dependencies from requirements.txt and convert them into fpm's
# arguments (i.e. --depends 'foo >= 1.0'). Values are quoted to preserve
# whitespaces, so the output must be evaled before passing to fpm!
#
# $1: Path to directory with requirements.txt (default is .).
python_depends() {
	local requirements_file="${1:-.}/requirements.txt"

	# XXX: Remove second regexp and "eval set" in _fpm after
	# https://github.com/jordansissel/fpm/pull/1261 is merged and released.
	sed -En \
		-e 's/.*# deb:([^ ]+).*/\1/' \
		-e 's/([<>=]+)/ \1 /' \
		-e "s/^(.*)$/--depends '\1'/p" \
		"$requirements_file"
}

replace_placeholders() {
	sed_inplace "s/@@VERSION@@/$PKG_VERSION/g" "$1"
}


# XXX: bc-common should be eventually moved to a separate repository.
build_common() {
	einfo 'Building debian package bc-common'

	cd common
	_fpm --name bc-common \
		--after-install debian/postinst \
		--depends adduser \
		--depends udev \
		--depends mosquitto \
		40-bc-workroom-stm32.rules=/lib/udev/rules.d/ \
		mosquitto.conf=/etc/mosquitto/conf.d/bigclown.conf

	cd - >/dev/null
}

build_gateway() {
	einfo 'Building debian package bc-workroom-gateway'

	cp -r gateway "$BUILD_DIR"/
	cd "$BUILD_DIR"/gateway

	replace_placeholders *.py
	chmod +x *.py

	_fpm --name bc-workroom-gateway \
		--depends bc-common \
		$(python_depends) \
		--deb-systemd bc-workroom-gateway.service \
		bc-workroom-gateway.py=/usr/bin/bc-workroom-gateway

	cd - >/dev/null
}

build_ledstrip() {
	einfo 'Building debian package bc-workroom-ledstrip'

	cp -r ledstrip "$BUILD_DIR"/
	cd "$BUILD_DIR"/ledstrip

	replace_placeholders *.py
	chmod +x *.py

	_fpm --name bc-workroom-ledstrip \
		--depends bc-common \
		--depends bc-workroom-gateway \
		$(python_depends) \
		--deb-systemd bc-workroom-ledstrip.service \
		bc-workroom-ledstrip.py=/usr/bin/bc-workroom-ledstrip

	cd - >/dev/null
}

build_blynk() {
	einfo 'Building debian package bc-workroom-blynk'

	cp -r blynk "$BUILD_DIR"/
	cd "$BUILD_DIR"/blynk

	# Prepare symlink
	local tmp_dir="$(mktemp -d)"
	ln -s "$BLYNK_DEST_DIR"/main.js "$tmp_dir"/bc-workroom-blynk

	# Change version in package.json.
	npm version "$PKG_VERSION"

	rm -Rf node_modules
	npm install --production
	chmod +x main.js

	_fpm --name bc-workroom-blynk \
		--depends nodejs \
		--depends bc-common \
		--deb-systemd bc-workroom-blynk.service \
		main.js="$BLYNK_DEST_DIR/main.js" \
		package.json="$BLYNK_DEST_DIR/package.json" \
		node_modules="$BLYNK_DEST_DIR" \
		"$tmp_dir/bc-workroom-blynk"=/usr/bin

	rm -Rf "$tmp_dir"
	cd - >/dev/null
}

build_paho_mqtt() {
	einfo 'Building debian package python3-paho-mqtt'

	fpm --input-type python \
		--output-type deb \
		--package "$TARGET_DIR" \
		--maintainer "$PKG_MAINTAINER" \
		--exclude '**/__pycache__' \
		--python-bin python3 \
		--python-package-name-prefix python3 \
		--python-install-lib /usr/lib/python3/dist-packages \
		paho-mqtt
}


#----------  M a i n  ----------#

if ! has fpm; then
	die 'fpm not found!' \
		'TIP: Read https://fpm.readthedocs.io/en/latest/installing.html for instructions.'
fi

rm -rf "$BUILD_DIR"
rm -rf "$TARGET_DIR"/*.deb
mkdir -p "$BUILD_DIR" "$TARGET_DIR"

for module in common gateway ledstrip blynk paho_mqtt; do
	eval "build_$module"
done

rm -Rf "$BUILD_DIR"
